{"version":3,"sources":["components/Modal.js","components/UpdateProfile.js","components/FetchContacts.js","components/Navbar.js","components/NewContact.js","App.js","index.js"],"names":["Modal","children","className","UpdateProfile","objNum","users","modalHandler","name","useRef","username","email","mobile","address","companyName","expertise","domain","website","phone","street","company","catchPhrase","bs","onSubmit","e","preventDefault","fetch","method","body","JSON","stringify","id","title","userId","headers","then","response","json","console","log","type","placeholder","onClick","FetchContacts","useState","setUsers","profileUpdated","setprofileUpdated","setobjNum","fetchedArray","setfetchedArray","useEffect","fetchData","a","data","updateProfileHandler","target","value","deleteProfileHandler","map","item","suite","zipcode","geo","lat","lng","Navbar","openModal","style","fontSize","NewContact","newContact","setnewContact","resetInput","current","textAlign","newEnteredContact","prevState","ref","required","App","showModal","setshowModal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f856bae0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Modal.css\";\r\nconst Modal = ({ children }) => {\r\n  return (\r\n    <div className=\"modal-backdrop\">\r\n      <div className=\"modal\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useRef } from \"react\";\r\nimport Modal from \"../components/Modal\";\r\nimport \"./UpdateProfile.css\";\r\nconst UpdateProfile = ({ objNum, users, modalHandler }) => {\r\n  let name = useRef();\r\n  let username = useRef();\r\n  let email = useRef();\r\n  let mobile = useRef();\r\n  let address = useRef();\r\n  let companyName = useRef();\r\n  let expertise = useRef();\r\n  let domain = useRef();\r\n  let website = useRef();\r\n\r\n  name = users[objNum - 1].name;\r\n  username = users[objNum - 1].username;\r\n  email = users[objNum - 1].email;\r\n  mobile = users[objNum - 1].phone;\r\n  address = users[objNum - 1].address.street;\r\n  companyName = users[objNum - 1].company.name;\r\n  expertise = users[objNum - 1].company.catchPhrase;\r\n  domain = users[objNum - 1].company.bs;\r\n  website = users[objNum - 1].website;\r\n\r\n  const addContactHandler = (e) => {\r\n    e.preventDefault();\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${objNum}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        id: 1,\r\n        title: \"foo\",\r\n        body: \"bar\",\r\n        userId: 1,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => console.log(json));\r\n    console.log(\"Profile Updated\");\r\n  };\r\n  return (\r\n    <Modal>\r\n      <h2>Enter Updated Details</h2>\r\n      <div>\r\n        <form onSubmit={addContactHandler}>\r\n          <div className=\"form-content\">\r\n            <label>Name:</label>\r\n            <input type=\"text\" placeholder={name} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Username:</label>\r\n            <input type=\"text\" placeholder={username} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Email:</label>\r\n            <input type=\"email\" placeholder={email} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Mobile:</label>\r\n            <input type=\"text\" placeholder={mobile} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Address:</label>\r\n            <input type=\"text\" placeholder={address} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Company Name:</label>\r\n            <input type=\"text\" placeholder={companyName} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Expertise:</label>\r\n            <input type=\"text\" placeholder={expertise} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Domain:</label>\r\n            <input type=\"text\" placeholder={domain} />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <label>Website:</label>\r\n            <input type=\"text\" placeholder={website} />\r\n          </div>\r\n          <div className=\"btn-modal\">\r\n            <button onClick={modalHandler} type=\"button\">\r\n              Close\r\n            </button>\r\n            <button type=\"submit\">Add Contact</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\n\r\nconst FetchContacts = () => {\r\n  const [users, setUsers] = useState(null);\r\n  const [profileUpdated, setprofileUpdated] = useState(false);\r\n  const [objNum, setobjNum] = useState(null);\r\n  const [fetchedArray, setfetchedArray] = useState();\r\n  const closeProfileUpdateModal = () => {\r\n    setprofileUpdated(false);\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      );\r\n      const data = await response.json();\r\n      setfetchedArray(data);\r\n      setUsers(data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const updateProfileHandler = (e) => {\r\n    setprofileUpdated(true);\r\n    setobjNum(e.target.value);\r\n  };\r\n  const deleteProfileHandler = (e) => {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${e.target.value}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    console.log(\"Profile Deleted \");\r\n  };\r\n  return (\r\n    <div>\r\n      {users ? (\r\n        users.map((item) => (\r\n          <div className=\"container\" key={item.id}>\r\n            <div className=\"card\">\r\n              <div className=\"inner-card\">\r\n                <p>\r\n                  <span>Name</span> : {item.name}\r\n                </p>\r\n                <p>\r\n                  <span>Username</span>: {item.username}\r\n                </p>\r\n                <p>\r\n                  <span>Email</span>: {item.email}\r\n                </p>\r\n                <p>\r\n                  <span>Mobile</span>:{item.phone}\r\n                </p>\r\n                <p>\r\n                  <span>Address</span>: {item.address.street}{\" \"}\r\n                  {item.address.suite} {item.address.zipcode}\r\n                </p>\r\n                <p>\r\n                  <span>Latitude</span>: {item.address.geo.lat}\r\n                </p>\r\n                <p>\r\n                  <span>Longitude</span>: {item.address.geo.lng}\r\n                </p>\r\n              </div>\r\n              <div className=\"company-info\">\r\n                <p>\r\n                  <span>Company Name</span>: {item.company.name}\r\n                </p>\r\n                <p>\r\n                  <span>Expertise</span>: {item.company.catchPhrase}\r\n                </p>\r\n                <p>\r\n                  <span>Domain</span>: {item.company.bs}\r\n                </p>\r\n                {/* <p>\r\n                  <span>phone</span>\": \"1-770-736-8031 x56442\"\r\n                </p> */}\r\n                <p>\r\n                  <span>Website</span>: {item.website}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"btn\">\r\n              <button value={item.id} onClick={updateProfileHandler}>\r\n                Update Profile\r\n              </button>\r\n              <button value={item.id} onClick={deleteProfileHandler}>\r\n                Delete Profile\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading Data....</p>\r\n      )}\r\n\r\n      {profileUpdated && (\r\n        <UpdateProfile\r\n          objNum={objNum}\r\n          users={fetchedArray}\r\n          modalHandler={closeProfileUpdateModal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchContacts;\r\n","import React from \"react\";\r\n\r\nconst Navbar = ({ openModal }) => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <h1 style={{ fontSize: \"2.5rem\" }}>Contact App</h1>\r\n      <button className=\"add-contact\" onClick={openModal}>\r\n        Add a Contact\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nconst NewContact = ({ onClick }) => {\r\n  let name = useRef();\r\n  let username = useRef();\r\n  let email = useRef();\r\n  let mobile = useRef();\r\n  let address = useRef();\r\n  let companyName = useRef();\r\n  let expertise = useRef();\r\n  let domain = useRef();\r\n  let website = useRef();\r\n\r\n  const [newContact, setnewContact] = useState([]);\r\n\r\n  const addContactHandler = (e) => {\r\n    e.preventDefault();\r\n    const newEnteredContact = {\r\n      name: name.current.value,\r\n      username: username.current.value,\r\n      email: email.current.value,\r\n      mobile: mobile.current.value,\r\n      address: address.current.value,\r\n      companyName: companyName.current.value,\r\n      expertise: expertise.current.value,\r\n      domain: domain.current.value,\r\n      website: website.current.value,\r\n    };\r\n    setnewContact((prevState) => [...prevState, newEnteredContact]);\r\n\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        title: \"foo\",\r\n        body: \"bar\",\r\n        userId: 1,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => console.log(json));\r\n\r\n    resetInput();\r\n  };\r\n  const resetInput = () => {\r\n    name.current.value = \"\";\r\n    username.current.value = \"\";\r\n    email.current.value = \"\";\r\n    mobile.current.value = \"\";\r\n    address.current.value = \"\";\r\n    expertise.current.value = \"\";\r\n    domain.current.value = \"\";\r\n    website.current.value = \"\";\r\n  };\r\n  useEffect(() => {\r\n    console.log(newContact);\r\n  }, [newContact]);\r\n\r\n  return (\r\n    <>\r\n      <h2 style={{ textAlign: \"center\" }}>Please Enter New Contact Details</h2>\r\n      <form onSubmit={addContactHandler}>\r\n        <div className=\"form-content\">\r\n          <label>Name:</label>\r\n          <input type=\"text\" ref={name} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Username:</label>\r\n          <input type=\"text\" ref={username} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Email:</label>\r\n          <input type=\"email\" ref={email} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Mobile:</label>\r\n          <input type=\"number\" ref={mobile} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Address:</label>\r\n          <input type=\"text\" ref={address} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Company Name:</label>\r\n          <input type=\"text\" ref={companyName} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Expertise:</label>\r\n          <input type=\"text\" ref={expertise} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Domain:</label>\r\n          <input type=\"text\" ref={domain} required />\r\n        </div>\r\n        <div className=\"form-content\">\r\n          <label>Website:</label>\r\n          <input type=\"text\" ref={website} required />\r\n        </div>\r\n        <div className=\"btn-modal\">\r\n          <button onClick={onClick} type=\"button\">\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Add Contact</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewContact;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport FetchContacts from \"./components/FetchContacts\";\nimport Navbar from \"./components/Navbar\";\nimport Modal from \"./components/Modal\";\nimport NewContact from \"./components/NewContact\";\nfunction App() {\n  const [showModal, setshowModal] = useState(false);\n\n  const closeModal = () => {\n    setshowModal(false);\n  };\n  const openModal = () => {\n    setshowModal(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar openModal={openModal} />\n      <FetchContacts />\n      {showModal && (\n        <Modal>\n          <NewContact onClick={closeModal} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}